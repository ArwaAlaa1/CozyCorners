@model CozyCorners.Core.Models.Product

@{
    ViewData["Title"] = "ProductDetails";
    Layout = "~/Views/Shared/_LayoutSite.cshtml";
}

<div class="container mt-5 bg-secondary p-5">
    <div class="row">
        <!-- Product Image -->
        <div class="col-md-6">
            <img id="productImage" src="@Model.PhotoPath" alt="Product Image" class="product-image">
        </div>

        <!-- Product Details -->
        <div class="col-md-6">
            <h1 id="productName">@Model.Name</h1>
            <p id="productDescription">@Model.Description</p>

            <!-- Price -->
            <div class="product-price">
                $<span id="productPrice">@Model.Price</span>
            </div>

            <!-- Rating -->
            <div class="mt-3">
                <span id="productRating" class="rating-stars">
                    &#9733;&#9733;&#9733;&#9733;&#9734; <!-- Example rating -->
                </span>
                (4.0)
            </div>

            <!-- Category -->
            <div class="category-tag">
                Category: <span id="productCategory">@Model.Category.Name</span>
            </div>

            <!-- Quantity Selector -->
          @*   <div class="mt-4">
                <label for="quantity" class="form-label">Quantity:</label>
                <input type="number" id="quantity" name="Quantity" class="form-control quantity-input" value="1" min="1">
            </div> *@

            <!-- Add to Cart Form -->
            <form method="post" asp-action="AddCart" asp-controller="Cart" class="add-to-cart-form">
                @Html.AntiForgeryToken()
                <input type="hidden" name="ProductId" value="@Model.Id" />
                <label for="quantity" class="form-label">Quantity:</label>
                <input type="number" id="quantity" name="quantity" class="form-control quantity-input" value="1" min="1">
                <button type="submit" class="btn btn-primary mt-3">Add to Cart</button>
            </form>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Update the star rating dynamically based on the product's rating
        document.getElementById('productRating').innerHTML = '★'.repeat(Math.floor(@Model.Rating)) + '☆'.repeat(5 - Math.floor(@Model.Rating));

        // Handle the Add to Cart form submission
        document.querySelector('.add-to-cart-form').addEventListener('submit', function (event) {
            // Ensure quantity is valid before submitting the form
            const quantityInput = document.getElementById('quantity');
            if (quantityInput.value < 1) {
                alert('Please enter a valid quantity.');
                event.preventDefault();  // Prevent form submission if quantity is invalid
            }
        });
    </script>
}
